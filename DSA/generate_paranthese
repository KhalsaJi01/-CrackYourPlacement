class Solution {
public:
void solve (string op,vector<string>&ans,int open,int close)
{
    if(open==0&&close==0)
    {
        ans.push_back(op);
        return ;
    }
    if(open!=0)
    {
        op.push_back('(');
        solve(op,ans,open-1,close);
        op.pop_back();
    }
    if(open<close){
        op.push_back(')');
        solve(op,ans,open,close-1);
        op.pop_back();
    }
}
    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        string op;
        int open =n;
        int close =n;
        solve(op,ans,open,close);
        return ans;
    }
};